Description: 'PostGreSQL Database infrastructure'

Parameters:
  VpcId: { Type: String }
  PrivateSubnetIds: { Type: CommaDelimitedList }
  DBSecurityGroup: { Type: String }
  EnvironmentName: { Type: String }

Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB subnet group for RDS
      SubnetIds: !Ref PrivateSubnetIds
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-db-subnet-group

  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${EnvironmentName}/rds/credentials
      Description: RDS database credentials
      GenerateSecretString:
        SecretStringTemplate: '{"username": "dbadmin", "dbname": "appdb"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\'

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: postgres
      EngineVersion: '15'
      DBInstanceClass: db.t4g.medium
      AllocatedStorage: 20
      StorageType: gp3
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      MasterUsername: !Sub '{{resolve:secretsmanager:${DBSecret}::username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DBSecret}::password}}'
      DBName: !Sub '{{resolve:secretsmanager:${DBSecret}:SecretString:dbname}}'
      MultiAZ: true
      PubliclyAccessible: false
      StorageEncrypted: true
      BackupRetentionPeriod: 7
      DeletionProtection: false
      EnableCloudwatchLogsExports:
        - postgresql

Outputs:
  DBEndpoint:
    Value: !GetAtt DBInstance.Endpoint.Address
  DBSecretArn:
    Value: !Ref DBSecret
  DBSecretName:
    Value: !Sub ${EnvironmentName}/rds/credentials